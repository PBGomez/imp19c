@maxwidth = 700
@listbuttonwidth = 572
@listbuttontall = 106
@listbuttonshort = 48
@mainpopwidth = 90
@window_width = 720
@window_height = 900

base_window = {
	gfxtype = windowgfx
	name = "culture_view"
	parentanchor = top|left
	widgetanchor = top|left
	size = { @window_width @window_height }
	using = main_window_template
	
	### Audio ###
	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	state = {
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}	
	
	state = {
		name = _hide
		on_start = "[PdxGuiTriggerAllAnimations('culture_view_closed')]"
	}

	flowcontainer = {
		direction = vertical
		widget = {
			size = { @window_width 48 }
			using = MainWindowHeaderBox
			blockoverride "Title_text" { text = "CULTURE_MENU_HEADER" }
			blockoverride "FlagOrIcon"
			{
				icon = {
					texture = "gfx/interface/base_parts/yellow_button_color_200fs.dds"
					framesize = { 100 100 }
					frame = 6
					position = { -2 -2 }
					size = { 32 32 }
					modify_texture = {
						texture = "gfx/interface/icons/menu_buttons/menu_culture.dds"
						blend_mode = alphamultiply
					}
				}
			}
			blockoverride "White_buttons" 
			{
				button_back = { 
					shortcut = "previous_window"
					onclick = "[CultureView.OnPrevious]"
					tooltip = "PREVIOUS_CULTURE_VIEW"
				}

				button_close = {
					onclick = "[CultureView.OnClose]"
					tooltip = "CLOSE"
					shortcut = "close_window"
				}
			}
		}
		#container = {
		#	name = "Culture Map Mode Button"
		#	position = { -134 13 }
		#	#parentanchor = top|right

		#	button = {
		#		size = { 45 37 }
		#		framesize = { 45 37 }
		#		shortcut = map_mode_1
		#		texture = "[CultureView.GetMapModeToggleIcon('culture')]"
		#		tooltip = "[CultureView.GetMapModeToggleDesc('culture')]"
		#		onclick = "[CultureView.OnClickMapModeToggle('culture')]"
		#		clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_map_mode"
		#	}
		#}
		##########################
		# Culture Summary of Nation
		##########################
		flowcontainer = {
			name = "summary top part"
			spacing = 5
			margin = { 10 10 }
			flowcontainer = {
				direction = vertical
				textbox = {
					using = BaseFontM
					using = Black_FontColor
					text = "MAIN_CULTURE_NAME"
					size = { 245 28 }
					align = left
					elide = right
				} 
				textbox = {
					using = BaseFontS
					using = Black_FontColor
					text = "CULTURE_MENU_CULTURE_GROUP_SUBTEXT"
					size = { 245 20 }
					align = left
					elide = right
				}
				flowcontainer = {
					spacing = 10
					margin_top = 10
					flowcontainer = {
						name = "Main_Culture_Stats"
						direction = vertical
						icon_and_text = {
							name = "Main_Cultural_Happiness"
							size = { 100 32 }
							tooltip = "[CultureView.GetPrimaryCultureHappinessTooltip]"
							blockoverride "Icon"
							{
								icon = {
									position = { 2 2 }
									texture = "gfx/interface/icons/shared_icons/pop_happy.dds"
									framesize = { 50 50 }
									size = { 30 30 }
									frame = 1
								}
							}
							blockoverride "Text"
							{
								text = "[CultureView.GetPrimaryCultureHappiness|0%]"
							}
						}
						icon_and_text = {
							name = "Main_Cultural_Population"
							size = { 100 32 }
							tooltip = "[CultureView.GetPlayer.BuildTotalPopulationToolTip]"
							blockoverride "Icon"
							{
								icon = {
									size = { 34 34 }
									texture = "gfx/interface/icons/shared_icons/pop_type.dds"
								}
							}
							blockoverride "Text"
							{
								text = "[CultureView.GetNumberOfPopsOfType('total')]"
							}
						}
					}
					icon_pie = {
						size = { 76 76 }
						datamodel = "[CultureView.GetPopCultures]"
						###Slices and Icon
						blockoverride "SliceTooltip" { tooltip = "[PopCultureItem.GetTooltip]" }
						blockoverride "SliceValue" { value = "[PopCultureItem.GetSize]" }
						blockoverride "SliceColor" { color = "[PopCultureItem.GetColor]" }
						blockoverride "Icon" 
						{ 
							using = icon_culture
							position = { 0 1 }
							tooltip = "POPCULTUREPIECHART"
						}
					}
				}
			}
			#### Pops In Here
			flowcontainer = {
				spacing = 5
				pop_widget = {
					tooltip = "CVIEW_UPPER_STRATA_POPTYPE_TOOLTIP"
					blockoverride "BackgroundTexture"
					{
							texture = "gfx/interface/icons/pop_types/upper_strata_bg.dds"
					}
					blockoverride "Icon"
					{
							using = icon_pop_upper_strata
					}
					blockoverride "NumPops"
					{
						text = "[CultureView.GetNumberOfPopsOfType('upper_strata')]"
					}
				}
				pop_widget = {							
					tooltip = "CVIEW_MIDDLE_STRATA_POPTYPE_TOOLTIP"
					blockoverride "BackgroundTexture"
					{
						texture = "gfx/interface/icons/pop_types/middle_strata_bg.dds"
					}
					blockoverride "Icon"
					{
						using = icon_pop_middle_strata
					}
					blockoverride "NumPops"
					{
						text = "[CultureView.GetNumberOfPopsOfType('middle_strata')]"
					}
				}
				pop_widget = {
					tooltip = "CVIEW_PROLETARIAT_POPTYPE_TOOLTIP"
					blockoverride "BackgroundTexture"
					{
							texture = "gfx/interface/icons/pop_types/proletariat_bg.dds"
					}
					blockoverride "Icon"
					{
						using = icon_pop_proletariat
					}

					blockoverride "NumPops"
					{
						text = "[CultureView.GetNumberOfPopsOfType('proletariat')]"
					}
				}
				pop_widget = {
					tooltip = "CVIEW_LOWER_STRATA_POPTYPE_TOOLTIP"
					blockoverride "BackgroundTexture"
					{
						texture = "gfx/interface/icons/pop_types/lower_strata_bg.dds"
					}
					blockoverride "Icon"
					{
						using = icon_pop_lower_strata
					}
					blockoverride "NumPops"
					{
						text = "[CultureView.GetNumberOfPopsOfType('lower_strata')]"
					}
				}
				pop_widget = {
					tooltip = "CVIEW_INDENTURED_POPTYPE_TOOLTIP"
					blockoverride "BackgroundTexture"
					{
						texture = "gfx/interface/icons/pop_types/indentured_bg.dds"
					}
					blockoverride "Icon"
					{
						using = icon_pop_indentured
					}
					blockoverride "NumPops"
					{
						text = "[CultureView.GetNumberOfPopsOfType('indentured')]"
					}
				}
				pop_widget = {
					tooltip = "CVIEW_TRIBAL_POPTYPE_TOOLTIP"
					blockoverride "BackgroundTexture"
					{
						texture = "gfx/interface/icons/pop_types/tribesmen_bg.dds"
					}
					blockoverride "Icon"
					{
						using = icon_pop_tribal
					}
					blockoverride "NumPops"
					{
						text = "[CultureView.GetNumberOfPopsOfType('tribesmen')]"
					}
				}
				pop_widget = {
					tooltip = "CVIEW_SLAVES_POPTYPE_TOOLTIP"
					blockoverride "BackgroundTexture"
					{
						texture = "gfx/interface/icons/pop_types/slaves_bg.dds"
					}
					blockoverride "Icon"
					{
						using = icon_pop_slaves
					}
					blockoverride "NumPops"
					{
						text = "[CultureView.GetNumberOfPopsOfType('slaves')]"
					}
				}
			}
		}
		###########################
		# Culture Integration
		###########################
		margin_widget = {
			size = { @window_width 32 }
			margin = { 10 0 }
	        sub_header = {
				name = "cultures_header"
				size = { 100% 100% }
				blockoverride "Title_text"
				{
					text = "CULTURE_INTEGRATION_HEADER"
				}
			}
		}
		##### Filter Options
        flowcontainer = {
        	position = { 4 2 }
			direction = horizontal
			parentanchor = top|left
			name = "Filter_Options"
			spacing = 10
			margin = { 10 5 }
			textbox = {
				parentanchor = vcenter
				autoresize = yes
				align = left
				multiline = no
				using = BaseFontS
				using = Black_FontColor
				text = "FILTER_BY"
				maximumsize = { 60 24 }
				minimumsize = { 60 24 }
			}

			widget = {
				size = { 180 28 }
				name = "culture_group"
				tooltip = SHOW_CULTURE_GROUPS_TT
				parentanchor = vcenter
				text_button_square_hollow = {
					name = "fake_drop_down_button"
					size = { 100% 100% }
					blockoverride "Button_text"
					{
						text = "CULTURE_GROUPS_BUTTON"
						using = Black_FontColor
					}
					blockoverride "On_click"
					{
						onclick = "[CultureView.OnOpenCultureGroupView]"
					}

					blockoverride "Center_text" 
					{
						visible = yes
					}
					#icon = {
					#	texture = "gfx/interface/base_parts/arrow_right.dds"
					#	parentanchor = right|vcenter
					#	position = { -16 0 }
					#}
				}
			}
			widget = {
				size = {}
			}
			checkbox_entry = {
				name = "integrated_notintegrated"
				tooltip = SHOW_INTEGRATED_TT
				size = { 214 34 }
				blockoverride "Frame"
				{
					frame = "[CultureView.GetIntegratedIconFrame]"
				}
				blockoverride "On_click" 
				{ 
					onclick = "[CultureView.ToggleIntegrated]"
				}
				
				blockoverride "Text" 
				{ 
					text = "INTEGRATED_POPS_BUTTON"
					margin_right = 4
				}
			}
		}
		##### Sorting Options	
		flowcontainer = {
			margin = { 10 0 }
			spacing = 5
			name = "Sort_Options"
			#textbox = {
			#	using = BaseFontS
			#	using = Black_FontColor
			#	text = "SORT_BY_SITES"
			#	autoresize = yes
			#	align = left
			#	parentanchor = vcenter
			#	maximumsize = { 67 24 }
			#	minimumsize = { 67 24 }
			#}
			text_button_sort = {
				name = "sort_culture"
				size = { 30 32 }
				tooltip = SORT_CULTURE_GROUP_TT
				blockoverride "On_click"
				{
					onclick = "[CultureView.SortCultures('culture_group')]"
					
				}
				blockoverride "DownState"
				{
					down = "[CultureView.IsSorted('culture_group')]"
				}
				
				blockoverride "Icon" 
				{
					size = { 20 20 }
					color = { 0.45 1.0 0.95 1.0 }
					texture = "gfx/interface/base_parts/pattern_square.dds"
				}

				blockoverride "Button_text"
				{
					text = ""
				}	
			}
			text_button_sort = {
				name = "sort_integration"
				size = { 30 32 }
				tooltip = SORT_INTEGRATION_STATUS_TT
				blockoverride "On_click"
				{
					onclick = "[CultureView.SortCultures('integration_status')]"
					
				}
				blockoverride "DownState"
				{
					down = "[CultureView.IsSorted('integration_status')]"
				}
				
				blockoverride "Icon"
				{
					size = { 32 32 }
					texture = "gfx/interface/icons/integrated.dds"
				}

				blockoverride "Button_text"
				{
					visible = no
				}
			}
			text_button_sort = {
				name = "sort_name"
				size = { 135 32 }
				tooltip = SORT_CULTURE_NAME_TT
				blockoverride "Button_text"
				{
					text = "A_Z"
				}
				blockoverride "Icon"
				{
					visible = no
				}

				blockoverride "On_click"
				{
					onclick = "[CultureView.SortCultures('name')]"
					
				}
				blockoverride "DownState"
				{
					down = "[CultureView.IsSorted('name')]"
				}
			}
			text_button_sort = {
				name = "sort_culture_happiness"
				size = { 180 32 }
				tooltip = SORT_CULTURAL_HAPPINESS_TT
				blockoverride "On_click"
				{
					onclick = "[CultureView.SortCultures('happiness')]"
					
				}
				
				blockoverride "DownState"
				{
					down = "[CultureView.IsSorted('happiness')]"
				}
				blockoverride "Icon"
				{
					size = { 30 30 }
					frame = 1
					framesize = { 50 50 }
					texture = "gfx/interface/icons/shared_icons/pop_happy.dds"
					#tooltip = "POPCULTUREPIECHART"
				}

				blockoverride "Button_text"
				{
					visible = no
				}
			}
			text_button_sort = {
				name = "sort_pop_type"
				size = { 110 32 }
				tooltip = SORT_POPTYPE_TT
				blockoverride "On_click"
				{
					onclick = "[CultureView.SortCultures('poptype')]"
					
				}

				blockoverride "DownState"
				{
					down = "[CultureView.IsSorted('poptype')]"
				}
			
				blockoverride "Icon"
				{
					size = { 54 58 }
					texture = "gfx/interface/icons/pop_types/pop_type_selection.dds"
					framesize = { 98 100 }
					frame = 3
				}
				blockoverride "Button_text"
				{
					visible = no
				}
			}
			text_button_sort = {
				name = "sort_population"
				size = { 190 32 }
				tooltip = SORT_POP_COUNT_TT
				blockoverride "On_click"
				{
					onclick = "[CultureView.SortCultures('popcount')]"
					down = "[CultureView.IsSorted('popcount')]"
				}

				blockoverride "DownState"
				{
					down = "[CultureView.IsSorted('popcount')]"
				}

				blockoverride "Icon"
				{
					size = { 34 34 }
					texture = "gfx/interface/icons/shared_icons/pop_type.dds"
				}
				blockoverride "Button_text"
				{
					visible = no
				}
			}
		}
		###########################
		# Culture Scroll List
		###########################
		margin_widget = {
			name = "Culture Scroll List"
	        size = { @window_width 570 }
	        margin = { 10 0 }

	        scrollarea = {
				position = { 0 8 }
				size = { 100% 100% }
				scrollbarpolicy_horizontal = always_off
				
				using = VerticalScrollAreaCutOff
					scrollbar_vertical = {
						using = VerticalScrollBar
					}
				
				scrollwidget = {

				dynamicgridbox = {
					name = "cultures_grid"
					datamodel = "[CultureView.GetAllCultures]"
					
					##########################
					######### List Button Item
					##########################						
					item = {
						### culture_item_details
						flowcontainer = {
							margin_bottom = 5
							flowcontainer = {
								spacing = 5
								widget = {
									size = { 20 100% }
									using = color_background
									blockoverride "Color" {
										texture = "gfx/interface/base_parts/base_color.dds"
										color = "[CountryCultureItem.GetCultureGroup.GetColor]"
									}
									margin_widget = {
										name = "Integration icon"
										size = { 20 30 }
										parentanchor = vcenter
										visible = "[Or(CountryCultureItem.IsIntegrated, EqualTo_string( CountryCultureItem.GetCountryCulture.GetName, CultureView.GetPlayer.GetPrimaryCulture.GetName ))]"
										
										tooltip = "INTEGRATED_TT"
										icon = {
											parentanchor = vcenter
											size = { 20 20 }
											texture = "gfx/interface/icons/integrated.dds"
										}											
									}
								}
								flowcontainer = {
									using = background_widget
									flowcontainer = {
										direction = vertical
										margin_left = 10
										ignoreinvisible = yes
										parentanchor = vcenter
										widget = {
											size = { 130 30 }
											tag = {
												text = "[CountryCultureItem.GetCountryCulture.GetName]"	
												datacontext = "[CountryCultureItem.GetCountryCulture]"
												tooltipwidget = country_culture_tooltip
												max_width = 130
												fontsize_min = 10
											}
										}
										fixed_size_progressbar = {
											name = "Integration"
											size = { 120 9 }
											blockoverride "Value" { value = "[CountryCultureItem.GetProgress]" }
											tooltip = "[CountryCultureItem.GetIntegrationProgressTooltip]"
											visible = "[CountryCultureItem.IsIntegrating]"
											parentanchor = vcenter
										}
									}
									icon_card = {
										size = { 38 38 }
										parentanchor = vcenter
										blockoverride "Icon" { 
											texture = "gfx/interface/icons/modifiers/levy.dds"
											size = { 32 32 }
										}
										#tooltip = "[CountryCultureItem.GetCountryCulture.GetCulture.GetName]"
										datacontext = "[CountryCultureItem.GetCountryCulture.GetCulture]" 
										tooltipwidget = {  
											using = culture_tooltip 
										}
									}
									margin_widget = {
										size = { 128 42 }
										parentanchor = vcenter
										using = NoninteractableBG
										blockoverride "Margins"
										{
											margin = { 0 0 }
											margin_top = 3
										}
										
										overlappingitembox = {
											datamodel = "[CountryCultureItem.GetTemporaryModifiers]"
											size = { 128 34 }
											spacing = 1
											parentanchor = vcenter
											
											item = {
												container = {
													icon = {
														texture = "[TimedModifier.GetModifier.GetIcon]"  
														size = { 32 32 }
													}
													
													tooltip = "[TimedModifier.GetTooltip]"
												}
											}
										}
									}
									margin_widget = {
										name = "Cultural_Happiness"
										size = { 60 30 }
										parentanchor = vcenter
										position = { 304 1 }
										tooltip = "[CountryCultureItem.GetCultureHappinessTooltip]"
										icon = {
											parentanchor = vcenter
											framesize = { 50 50 }
											size = { 22 22 }
											texture = "gfx/interface/icons/shared_icons/pop_happy.dds"
											frame = 1
										}
										
										textbox = {
											name = "culture_happiness"
											autoresize = yes
											position = { 24 1 }
											multiline = no
											using = BaseFontM
											using = Black_FontColor
											text = "[CountryCultureItem.GetCultureHappiness|%0]"
											tooltip = "[CountryCultureItem.GetCultureHappinessTooltip]"
											widgetanchor = top|left
											align = left
										}
									}
									margin_widget = {
										name = "Civic Rights"
										size = { 76 30 }
										parentanchor = vcenter
										position = { 374 -5 }
										icon = {
											name = "pop_choice_icon"
											parentanchor = vcenter
											position = { 0 0 }
											size = { 70 70 }
											tooltip = "[CountryCultureItem.GetCivicRightsTooltip]"
											texture = "gfx/interface/icons/pop_types/pop_type_selection.dds"
											frame = "[CountryCultureItem.GetCivicRightsFrame]"
											framesize = { 98 100 }
										}
									}
									flowcontainer = {
										spacing = 5
										parentanchor = vcenter
										icon_button_square = {
											name = "Civic Rights Change"
											size = { 36 36 }
											enabled ="[CountryCultureItem.CanChangeCivicRights]"
											tooltip = "[CountryCultureItem.CanChangeCivicRightsTooltip]"
											blockoverride "On_click"
											{
												onclick = "[CountryCultureItem.OnChangeCivicRight]"
											}

											blockoverride "Icon"
											{
												size = { 32 32 }
												using = white_background
												modify_texture = {
													texture = "gfx/interface/icons/shared_icons/change.dds"
													blend_mode = alphamultiply
												}
											}
										}
										icon_button_square = {
											size = { 36 36 }
											tooltip = "OPEN_CULTURE_DECISIONS_VIEW_TT"
											blockoverride "On_click"
											{
												onclick = "[CountryCultureItem.OnOpenCultureDecisionsView]"
											}

											blockoverride "Icon"
											{
												size = { 32 32 }
												using = white_background
												modify_texture = {
													texture = "gfx/interface/icons/icon_alpha/star.dds"
													blend_mode = alphamultiply
												}
											}
										}
										icon_button_square = {
											name = "select_on_map_button"
											size = { 36 36 }
											tooltip = "TOGGLE_CULTURE_MAPMODE_TT"
											blockoverride "On_click"
											{
												onclick = "[CountryCultureItem.SelectCultureForMapMode('culture')]"
											}
											blockoverride "Icon"
											{
												
												icon = {
													parentanchor = center
													using = brighten_red_background
													size = { 40 32 }
													modify_texture = {
														texture = "gfx/interface/icons/minimap/culture.dds"
														blend_mode = alphamultiply
													}
												}
												### When active	
												icon = {
													name = "select_on_map_toggle_active"
													visible = "[CountryCultureItem.IsSelectedCultureForMapMode]"
													parentanchor = center
													texture = "gfx/interface/base_parts/button_allframes.dds"
													framesize = { 100 100 }
													frame = 10
													size = { 39 32 }
													modify_texture = {
														texture = "gfx/interface/icons/minimap/culture.dds"
														blend_mode = alphamultiply
													}
												}
											}
										}
									}
									widget = {
										size = { 50 30 }
										parentanchor = vcenter
										tag = {
											text = "[CountryCultureItem.GetNumberOfPops]"
											parentanchor = right
											size = { 46 30 }
											maximumsize = { 46 30 }
										}
									}
									widget = {
										size = { 50 50 }
										parentanchor = vcenter
										piechart = {
											size = { 100% 100% }
											parentanchor = vcenter
											datamodel = "[CountryCultureItem.AccessPopTypeBreakdown]"
											icon = {
												texture = "gfx/interface/pie_charts/pie_chart_alpha_44_shadow.dds"
												size = { 100% 100% }
												alpha = 0.5
											}
											item = {
												pieslice = {
													texture = "gfx/interface/pie_charts/pie_chart_alpha_44.dds"
													tooltip = "[PopTypeItem.GetName]"
													value = "[PopTypeItem.GetSize]"
													color = "[PopTypeItem.GetColor]"
												}
											}
										}			
									}
								}
							}
						}
					}
				}
			}	
		}
	}
}